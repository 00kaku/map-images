[{"/media/kaku/E68436108435E429/PROJECTS/React Apps/map-images/src/index.js":"1","/media/kaku/E68436108435E429/PROJECTS/React Apps/map-images/src/reportWebVitals.js":"2","/media/kaku/E68436108435E429/PROJECTS/React Apps/map-images/src/App.js":"3","/media/kaku/E68436108435E429/PROJECTS/React Apps/map-images/src/component/Images.js":"4","/media/kaku/E68436108435E429/PROJECTS/React Apps/map-images/src/component/Screen.js":"5","/media/kaku/E68436108435E429/PROJECTS/React Apps/map-images/src/component/Map.js":"6","/media/kaku/E68436108435E429/PROJECTS/React Apps/map-images/src/component/Photos.js":"7","/media/kaku/E68436108435E429/PROJECTS/React Apps/map-images/src/component/Pagination.js":"8"},{"size":498,"mtime":1611982687285,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1611976505467,"results":"11","hashOfConfig":"10"},{"size":679,"mtime":1612097346007,"results":"12","hashOfConfig":"10"},{"size":1877,"mtime":1612098491773,"results":"13","hashOfConfig":"10"},{"size":1941,"mtime":1612038008279,"results":"14","hashOfConfig":"10"},{"size":2051,"mtime":1612066401186,"results":"15","hashOfConfig":"10"},{"size":910,"mtime":1612097458596,"results":"16","hashOfConfig":"10"},{"size":886,"mtime":1612092073034,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"10frsxg",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"/media/kaku/E68436108435E429/PROJECTS/React Apps/map-images/src/index.js",[],["42","43"],"/media/kaku/E68436108435E429/PROJECTS/React Apps/map-images/src/reportWebVitals.js",[],"/media/kaku/E68436108435E429/PROJECTS/React Apps/map-images/src/App.js",["44","45","46","47"],"import Map from './component/Map.js'\nimport Images from './component/Images'\nimport {BrowserRouter as Router ,Route} from 'react-router-dom';\nimport {\n\tGoogleMap,\n\tuseLoadScript,\n\tMarker,\n\tInfoWindow\n} from \"@react-google-maps/api\"\n\nimport React,{Component} from 'react'\n\nconst libraries =[\"places\"]\nexport default function App() {\n\tconst {isLoaded , loadError} = useLoadScript ({\n\t\tgoogleMapsApiKey : process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n\t\tlibraries\n\t});\n\nif (loadError) return \"Error Loading Maps\";\nif (!isLoaded) return <div className=\"loader\"></div>;\n\nreturn (\n<Router>\t\n<Route exact path=\"/\">\n<Map/>\n</Route>\n<Route path=\"/images\" component={Images} />\n</Router>\n\n\t)\n}","/media/kaku/E68436108435E429/PROJECTS/React Apps/map-images/src/component/Images.js",["48","49"],"import react,{Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport img from '../Assets/noPics.jpg'\nimport Photos from './Photos'\nclass Images extends Component {\nstate ={\n\tlat:localStorage.getItem('lat'),\n\tlon:localStorage.getItem('lon'),\n\tpictures:[],\n  isPicturesAvailable:false,\n  isLoading:true,\n}\n\ncomponentDidMount() {\n\t\n   let url =`https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=${process.env.REACT_APP_FLICKR_API_KEY}&lat=${this.state.lat}&lon=${this.state.lon}&radius=1&nojsoncallback=1&format=json&sort=interestingness-desc`;\n\t fetch(url)\n\t        .then(function(response){\n      return response.json();\n    })\n    .then(function(j){\n      let picArray = j.photos.photo.map((pic) => {\n        \n        var srcPath = 'https://farm'+pic.farm+'.staticflickr.com/'+pic.server+'/'+pic.id+'_'+pic.secret+'.jpg';\n        return(\n          srcPath\n        )\n      })\n      this.setState({pictures: picArray});\n      this.setState({isLoading:false});\n\n\n      if (picArray.length>0)\n        {\n          this.setState({isPicturesAvailable:true})\n    }\n    }.bind(this))\n}\nrender(){\n\nlet content =<div>\n              <Link to={{pathname:'/'}}>\n                  <button  className=\"btn ml-auto btn-danger fixed-top \"> \n                  &#x2715;</button>\n              </Link>\n               \n              <div>\n              {this.state.isPicturesAvailable?\n                <Photos photoArray={this.state.pictures}/>:\n              <div>\n              <h3>Can't find photos tagged to current co-ordinates</h3>  \n              <div className=\"noImage\">\n               <img  className=\"img-fluid img-responsive\" src={img}/>\n              </div></div>}\n            </div>\n            </div>\n\n\treturn (<div className=\"images\"> \n   {this.state.isLoading?<div className=\"loader\"></div>:content}\n    </div>);\n  }\n}\n\n\n\nexport default Images;","/media/kaku/E68436108435E429/PROJECTS/React Apps/map-images/src/component/Screen.js",["50"],"import React, { Component } from \"react\";\nimport { GoogleMap, Marker ,StandaloneSearchBox } from \"@react-google-maps/api\";\n\nclass Maps extends Component {\n  state = {\n    markerLat: \"\",\n    markerLng: \"\",\n    zoom: 10,\n    center: {\n      lat: 28.7041,\n      lng:  77.1025,\n    },\n    options :{\n      disableDefaultUI: true,\n    },\n    showButtonImage:false\n  };\n\n  componentDidMount() {\n    if (\"geolocation\" in navigator) {\n      let posLat=''\n      let posLng=''\n      let success = (position) => {\n        posLat = position.coords.latitude;\n        posLng = position.coords.longitude;\n\n        this.setState({\n          zoom: 12,\n          center: {\n            lat: posLat,\n            lng: posLng,\n          },\n        });\n      };\n      navigator.geolocation.getCurrentPosition(success);\n    }\n  }\n\n  mapRef = React.createRef();\n\n  setMarker(event) {\n    this.setState({ markerLat: event.latLng.lat(),\n    \t\t\t\tmarkerLng: event.latLng.lng(),\n    \t\t\t\tremoveMarker:false,\n    \t\t\t\tshowButtonImage:true})\n  }\n\n \n\n  render() {\n    const mapContainerStyle = {\n      width: \"100vw\",\n      height: \"100vh\",\n    };\n\n    \n    let MarkerPosition = (\n      <Marker\n        position={{ lat: this.state.markerLat, lng: this.state.markerLng }}\n        draggable={true}\n      />\n    );\n    \n\n    let MapPosition = (\n      <div>\n            \n \t\t\t<h1>\n \t\t\tMaps &#x1F9ED; Images \n \t\t\t</h1>\n \t\t\t\n \t\t\t\n \t\t\t{this.state.showButtonImage ? <div className=\"search\">\n \t\t\t<button> Show Images </button>\n \t\t\t</div> :null}\n        <GoogleMap\n        mapContainerStyle={mapContainerStyle}\n        zoom={this.state.zoom}\n        center={this.state.center}\n        options={this.state.options}\n        onClick={(event) => {\n          this.setMarker(event);\n        }}\n        onLoad={(map) =>{\n        this.mapRef=map;\n        }}\n      >\n      {MarkerPosition}\n      </GoogleMap>\n          \n      </div>\n    );\n    return ([MapPosition]);\n  }\n}\n\nexport default Maps;\n",["51","52"],"/media/kaku/E68436108435E429/PROJECTS/React Apps/map-images/src/component/Map.js",[],"/media/kaku/E68436108435E429/PROJECTS/React Apps/map-images/src/component/Photos.js",["53"],"import React from 'react';\nimport Pagination from './Pagination';\n\nclass Photos extends React.Component\n{\n\tstate ={\n\t\tposts:this.props.photoArray,\n\t\tcurrentPage:1,\n\t\tpostsPerPage:21\n\t}\n\t\n\tpaginate =(pageNumber) =>{\n\t\tthis.setState({currentPage:pageNumber});\n\t\tconsole.log(this.state);\n\t}\n\n\trender (){\n\n\t\t\tlet indexOfLastPost = this.state.currentPage * this.state.postsPerPage;\n  \t\t\tlet indexOfFirstPost = indexOfLastPost - this.state.postsPerPage;\n  \t\t\tlet currentPosts = this.state.posts.slice(indexOfFirstPost, indexOfLastPost);\n\tlet Posts =(\n\t\t<div>\n\t\t\t<div class=\"wrapper\">\n\t\t{\n\t\t\tcurrentPosts.map((photo)=>{\n\t\t\t\treturn <img src={photo}/>\n\t\t})\n\t\t}\n\t\t</div>\n\t\t\n\t\t<div>\n\t\t\t<Pagination \n        postsPerPage={this.state.postsPerPage}\n        totalPosts={this.state.posts.length}\n        paginate={this.paginate}\n      />\n      </div> \n      </div>)\n\n\treturn(<div>{Posts}</div>\n\t\t) }\n}\n\n\nexport default Photos;","/media/kaku/E68436108435E429/PROJECTS/React Apps/map-images/src/component/Pagination.js",["54","55"],"import React from 'react';\n\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav className=\"navbar navbar-bg-light fixed-top \">\n      <ul className=\"navbar-nav \">\n        <li className=\"nav-item dropdown\">\n        <a className=\"btn btn-secondary dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n          Pages\n        </a>\n        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n        {pageNumbers.map(number => (\n          \n            <a onClick={() => paginate(number)} className='page-link'>\n              {number}\n            </a>\n        ))}\n        </div>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;",["56","57"],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":5,"column":2,"nodeType":"64","messageId":"65","endLine":5,"endColumn":11},{"ruleId":"62","severity":1,"message":"66","line":7,"column":2,"nodeType":"64","messageId":"65","endLine":7,"endColumn":8},{"ruleId":"62","severity":1,"message":"67","line":8,"column":2,"nodeType":"64","messageId":"65","endLine":8,"endColumn":12},{"ruleId":"62","severity":1,"message":"68","line":11,"column":15,"nodeType":"64","messageId":"65","endLine":11,"endColumn":24},{"ruleId":"62","severity":1,"message":"69","line":1,"column":8,"nodeType":"64","messageId":"65","endLine":1,"endColumn":13},{"ruleId":"70","severity":1,"message":"71","line":53,"column":16,"nodeType":"72","endLine":53,"endColumn":70},{"ruleId":"62","severity":1,"message":"73","line":2,"column":29,"nodeType":"64","messageId":"65","endLine":2,"endColumn":48},{"ruleId":"58","replacedBy":"74"},{"ruleId":"60","replacedBy":"75"},{"ruleId":"70","severity":1,"message":"71","line":27,"column":12,"nodeType":"72","endLine":27,"endColumn":30},{"ruleId":"76","severity":1,"message":"77","line":14,"column":9,"nodeType":"72","endLine":14,"endColumn":167},{"ruleId":"76","severity":1,"message":"78","line":20,"column":13,"nodeType":"72","endLine":20,"endColumn":71},{"ruleId":"58","replacedBy":"79"},{"ruleId":"60","replacedBy":"80"},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'GoogleMap' is defined but never used.","Identifier","unusedVar","'Marker' is defined but never used.","'InfoWindow' is defined but never used.","'Component' is defined but never used.","'react' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'StandaloneSearchBox' is defined but never used.",["81"],["82"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["81"],["82"],"no-global-assign","no-unsafe-negation"]